const SDK_URL = '//connect.facebook.net/en_US/sdk.js';
const SCRIPT_ID = 'facebook-jssdk';

const configDefaults = {
  xfbml: true,
  version: 'v2.6',
  cookie: true
};

function isLoaded(document) {
  return !!document.getElementById(SCRIPT_ID);
}

function insertSDK(document) {
  const facebookScriptTag = document.createElement('script');
  facebookScriptTag.id = SCRIPT_ID;
  facebookScriptTag.src = SDK_URL;

  const firstScript = document.getElementsByTagName('script')[0];
  firstScript.parentNode.insertBefore(facebookScriptTag, firstScript);
}

function load(config, document) {
  return new Promise((resolve, reject) => {
    try {
      window.fbAsyncInit = function() {
        FB.init(config);
        resolve(FB);
      };

      if (isLoaded(document)) {
        resolve(FB);
      } else {
        insertSDK(document);
      }
    } catch (error) {
      reject(error);
    }
  });
}

export default function(config = {}, document = window.document) {
  if (!config.appId) {
    throw new Error('Facebook appId must be specified.');
  }

  const loaded = load(Object.assign({}, configDefaults, config), document);

  function loginFunc(method) {
    return loaded.then((sdk) => new Promise((resolve, reject) => {
      sdk[method]((response) => {
        if (response.status === 'connected') {
          resolve(response);
        } else {
          reject(response);
        }
      });
    }));
  }

  return {

    whenLoaded() {
      return loaded;
    },

    login() {
      return loginFunc('login');
    },

    getLoginStatus() {
      return loginFunc('getLoginStatus');
    }

  };

}
